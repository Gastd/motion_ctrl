TebLocalPlannerROS:

  ## Costmap converter plugin   
  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"
  


  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"
  costmap_converter_plugin: "" # deactivate plugin

  costmap_converter_spin_thread: true #If set to true, the costmap converter invokes its 
                                      #   callback queue in a different thread.
  costmap_converter_rate: 5           #Rate that defines how often the costmap_converter 
                                      #   plugin processes the current costmap (the value 
                                      #   should not be much higher than the costmap update 
                                      #   rate) [in Hz].




  ## Configure plugins (namespace move_base/TebLocalPlannerROS/PLUGINNAME)
  ## The parameters must be added for each plugin separately
  costmap_converter/CostmapToLinesDBSRANSAC:
    cluster_max_distance: 0.05           # (double, default: 0.4) Parameter for DB_Scan, maximum distance to neighbors [m]
    cluster_min_pts: 2                  # (int, default: 2) Parameter for DB_Scan: minimum number of points that define a cluster
    cluster_max_pts: 30 # (int, default: 30) Parameter for DB_Scan: maximum number of points that define a cluster (limit cluster size to avoid large L- and U-shapes)
    ransac_inlier_distance: 0.15        # (double, default: 0.2) Maximum distance to the line segment for inliers [in meters].
    ransac_min_inliers: 10              # (int, default: 10) Minimum numer of inliers required to form a line.
    ransac_no_iterations: 2000          # (int, default: 2000) Number of ransac iterations per cluster.
    ransac_remainig_outliers: 3         # (int, default: 3) Abort ransac iterations if the number of outliers is equal or below the value specified here.
    ransac_convert_outlier_pts: True    # (bool, default: true) Convert remaining outliers to single points.
    ransac_filter_remaining_outlier_pts: False  # (bool, default: false) Filter the interior of remaining outliers and keep only keypoints of their convex hull.
    convex_hull_min_pt_separation: 0.1  # (double, default: 0.1) Clear keypoints/vertices of the convex polygon that are close to each other [distance in meters] (0: keep all)




  costmap_converter/CostmapToPolygonsDBSConcaveHull:
    cluster_max_distance: 0.4 #(double, default: 0.4) Parameter for DB_Scan, maximum distance to neighbors [m]
    cluster_min_pts: 3        # (int, default: 2) Parameter for DB_Scan: minimum number of points that define a cluster
    cluster_max_pts: 50                 # (int, default: 30) Parameter for DB_Scan: maximum number of points that define a cluster (limit cluster size to avoid large L- and U-shapes)
    convex_hull_min_pt_separation: 0.1 #(double, default: 0.1) Clear keypoints/vertices of the convex polygon that are close to each other [distance in meters] (0: keep all)
    concave_hull_depth: 3.0 #(double, default: 2.0) Smaller depth: sharper surface, large depth: convex hull




  costmap_converter/CostmapToLinesDBSMCCH:
    cluster_max_distance: 0.4           #(double, default: 0.4) Parameter for DB_Scan, maximum distance to neighbors [m]
    cluster_min_pts: 2                  #(int, default: 2) Parameter for DB_Scan: minimum number of points that define a cluster
    cluster_max_pts: 30                 #(int, default: 30) Parameter for DB_Scan: maximum number of points that define a cluster (limit cluster size to avoid large L- and U-shapes)
    convex_hull_min_pt_separation: 0.1  #(double, default: 0.1) Clear keypoints/vertices of the convex polygon that are close to each other [distance in meters] (0: keep all)
    support_pts_max_dist: 0.3           #(double, default: 0.3) Minimum distance from a point to the line to be counted as support point
    support_pts_max_dist_inbetween: 1.0 #(double, default: 1.0) A line is only defined, if the distance between two consecutive support points is less than this treshold. Set to 0 in order to deactivate this check.
    min_support_pts: 2                  #(int, default: 2) Minimum number of support points required to represent a line.




